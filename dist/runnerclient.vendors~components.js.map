{"version":3,"sources":["webpack://RunnerClient/./node_modules/uuid/v4.js","webpack://RunnerClient/./node_modules/i18n-js/app/assets/javascripts/i18n.js","webpack://RunnerClient/./node_modules/uuid/lib/bytesToUuid.js","webpack://RunnerClient/./node_modules/uuid/lib/rng-browser.js"],"names":["rng","__webpack_require__","bytesToUuid","module","exports","options","buf","offset","i","Array","rnds","random","ii","root","undefined","__WEBPACK_AMD_DEFINE_RESULT__","I18n","global","slice","prototype","padding","number","toString","substr","isObject","obj","type","_typeof","isFunction","func","isSet","value","isArray","val","Object","call","isString","isBoolean","decimalAdjust","exp","Math","isNaN","NaN","split","lazyEvaluate","message","scope","DATE","day_names","abbr_day_names","month_names","abbr_month_names","meridian","NUMBER_FORMAT","precision","separator","delimiter","strip_insignificant_zeros","CURRENCY_FORMAT","unit","format","sign_first","PERCENTAGE_FORMAT","SIZE_UNITS","DEFAULT_OPTIONS","defaultLocale","locale","defaultSeparator","placeholder","fallbacks","translations","missingBehaviour","missingTranslationPrefix","reset","key","this","initializeOptions","locales","get","result","list","push","forEach","localeParts","firstFallback","secondFallback","length","join","indexOf","nullableFallbackLocale","pluralization","count","currentLocale","lookup","scopes","fullScope","getFullScope","shift","defaultValue","pluralizationLookupWithoutFallback","pluralizerKey","pluralizerKeys","pluralizer","pluralizationLookup","time","date","am","pm","prepareOptions","subject","args","arguments","attr","hasOwnProperty","createTranslationOptions","translationOptions","defaults","concat","translate","translation","optionsWithoutDefault","some","translationOption","interpolate","map","t","pluralize","missingTranslation","name","regex","matches","match","replace","nullPlaceholder","missingPlaceholder","RegExp","String","s","p1","p2","toLowerCase","apply","toNumber","formattedNumber","negative","parts","toFixed","abs","buffer","sign","unshift","max","toCurrency","localize","toPercentage","localizedValue","toTime","parseDate","convertedDate","fraction","parseInt","Date","UTC","setTime","parse","$1","$2","$3","$6","$4","$5","strftime","meridianOptions","getTime","Error","weekDay","getDay","day","getDate","year","getFullYear","month","getMonth","hour","getHours","hour12","secs","getSeconds","mins","getMinutes","getTimezoneOffset","absOffsetHours","floor","absOffsetMinutes","timezoneoffset","dateString","toHumanSize","size","iterations","extend","obj1","obj2","merge","dest","l","p","byteToHex","bth","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","r"],"mappings":"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","file":"runnerclient.vendors~components.js","sourcesContent":["var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// I18n.js\n// =======\n//\n// This small library provides the Rails I18n API on the Javascript.\n// You don't actually have to use Rails (or even Ruby) to use I18n.js.\n// Just make sure you export all translations in an object like this:\n//\n//     I18n.translations.en = {\n//       hello: \"Hello World\"\n//     };\n//\n// See tests for specific formatting like numbers and dates.\n//\n\n// Using UMD pattern from\n// https://github.com/umdjs/umd#regular-module\n// `returnExports.js` version\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(\"i18n\", function(){ return factory(root);});\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(root);\n  } else {\n    // Browser globals (root is window)\n    root.I18n = factory(root);\n  }\n}(this, function(global) {\n  \"use strict\";\n\n  // Use previously defined object if exists in current scope\n  var I18n = global && global.I18n || {};\n\n  // Just cache the Array#slice function.\n  var slice = Array.prototype.slice;\n\n  // Apply number padding.\n  var padding = function(number) {\n    return (\"0\" + number.toString()).substr(-2);\n  };\n\n  // Improved toFixed number rounding function with support for unprecise floating points\n  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).\n  var toFixed = function(number, precision) {\n    return decimalAdjust('round', number, -precision).toFixed(precision);\n  };\n\n  // Is a given variable an object?\n  // Borrowed from Underscore.js\n  var isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object'\n  };\n\n  var isFunction = function(func) {\n    var type = typeof func;\n    return type === 'function'\n  };\n\n  // Check if value is different than undefined and null;\n  var isSet = function(value) {\n    return typeof(value) !== 'undefined' && value !== null;\n  };\n\n  // Is a given value an array?\n  // Borrowed from Underscore.js\n  var isArray = function(val) {\n    if (Array.isArray) {\n      return Array.isArray(val);\n    };\n    return Object.prototype.toString.call(val) === '[object Array]';\n  };\n\n  var isString = function(val) {\n    return typeof value == 'string' || Object.prototype.toString.call(val) === '[object String]';\n  };\n\n  var isNumber = function(val) {\n    return typeof val == 'number' || Object.prototype.toString.call(val) === '[object Number]';\n  };\n\n  var isBoolean = function(val) {\n    return val === true || val === false;\n  };\n\n  var decimalAdjust = function(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n\n  var lazyEvaluate = function(message, scope) {\n    if (isFunction(message)) {\n      return message(scope);\n    } else {\n      return message;\n    }\n  }\n\n  var merge = function (dest, obj) {\n    var key, value;\n    for (key in obj) if (obj.hasOwnProperty(key)) {\n      value = obj[key];\n      if (isString(value) || isNumber(value) || isBoolean(value) || isArray(value)) {\n        dest[key] = value;\n      } else {\n        if (dest[key] == null) dest[key] = {};\n        merge(dest[key], value);\n      }\n    }\n    return dest;\n  };\n\n  // Set default days/months translations.\n  var DATE = {\n      day_names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    , abbr_day_names: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    , month_names: [null, \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    , abbr_month_names: [null, \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    , meridian: [\"AM\", \"PM\"]\n  };\n\n  // Set default number format.\n  var NUMBER_FORMAT = {\n      precision: 3\n    , separator: \".\"\n    , delimiter: \",\"\n    , strip_insignificant_zeros: false\n  };\n\n  // Set default currency format.\n  var CURRENCY_FORMAT = {\n      unit: \"$\"\n    , precision: 2\n    , format: \"%u%n\"\n    , sign_first: true\n    , delimiter: \",\"\n    , separator: \".\"\n  };\n\n  // Set default percentage format.\n  var PERCENTAGE_FORMAT = {\n      unit: \"%\"\n    , precision: 3\n    , format: \"%n%u\"\n    , separator: \".\"\n    , delimiter: \"\"\n  };\n\n  // Set default size units.\n  var SIZE_UNITS = [null, \"kb\", \"mb\", \"gb\", \"tb\"];\n\n  // Other default options\n  var DEFAULT_OPTIONS = {\n    // Set default locale. This locale will be used when fallback is enabled and\n    // the translation doesn't exist in a particular locale.\n      defaultLocale: \"en\"\n    // Set the current locale to `en`.\n    , locale: \"en\"\n    // Set the translation key separator.\n    , defaultSeparator: \".\"\n    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.\n    , placeholder: /(?:\\{\\{|%\\{)(.*?)(?:\\}\\}?)/gm\n    // Set if engine should fallback to the default locale when a translation\n    // is missing.\n    , fallbacks: false\n    // Set the default translation object.\n    , translations: {}\n    // Set missing translation behavior. 'message' will display a message\n    // that the translation is missing, 'guess' will try to guess the string\n    , missingBehaviour: 'message'\n    // if you use missingBehaviour with 'message', but want to know that the\n    // string is actually missing for testing purposes, you can prefix the\n    // guessed string by setting the value here. By default, no prefix!\n    , missingTranslationPrefix: ''\n  };\n\n  // Set default locale. This locale will be used when fallback is enabled and\n  // the translation doesn't exist in a particular locale.\n  I18n.reset = function() {\n    var key;\n    for (key in DEFAULT_OPTIONS) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n\n  // Much like `reset`, but only assign options if not already assigned\n  I18n.initializeOptions = function() {\n    var key;\n    for (key in DEFAULT_OPTIONS) if (!isSet(this[key])) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n  I18n.initializeOptions();\n\n  // Return a list of all locales that must be tried before returning the\n  // missing translation message. By default, this will consider the inline option,\n  // current locale and fallback locale.\n  //\n  //     I18n.locales.get(\"de-DE\");\n  //     // [\"de-DE\", \"de\", \"en\"]\n  //\n  // You can define custom rules for any locale. Just make sure you return a array\n  // containing all locales.\n  //\n  //     // Default the Wookie locale to English.\n  //     I18n.locales[\"wk\"] = function(locale) {\n  //       return [\"en\"];\n  //     };\n  //\n  I18n.locales = {};\n\n  // Retrieve locales based on inline locale, current locale or default to\n  // I18n's detection.\n  I18n.locales.get = function(locale) {\n    var result = this[locale] || this[I18n.locale] || this[\"default\"];\n\n    if (isFunction(result)) {\n      result = result(locale);\n    }\n\n    if (isArray(result) === false) {\n      result = [result];\n    }\n\n    return result;\n  };\n\n  // The default locale list.\n  I18n.locales[\"default\"] = function(locale) {\n    var locales = []\n      , list = []\n    ;\n\n    // Handle the inline locale option that can be provided to\n    // the `I18n.t` options.\n    if (locale) {\n      locales.push(locale);\n    }\n\n    // Add the current locale to the list.\n    if (!locale && I18n.locale) {\n      locales.push(I18n.locale);\n    }\n\n    // Add the default locale if fallback strategy is enabled.\n    if (I18n.fallbacks && I18n.defaultLocale) {\n      locales.push(I18n.defaultLocale);\n    }\n\n    // Locale code format 1:\n    // According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)\n    // language codes for Traditional Chinese should be `zh-Hant`\n    //\n    // But due to backward compatibility\n    // We use older version of IETF language tag\n    // @see http://www.w3.org/TR/html401/struct/dirlang.html\n    // @see http://en.wikipedia.org/wiki/IETF_language_tag\n    //\n    // Format: `language-code = primary-code ( \"-\" subcode )*`\n    //\n    // primary-code uses ISO639-1\n    // @see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    // @see http://www.iso.org/iso/home/standards/language_codes.htm\n    //\n    // subcode uses ISO 3166-1 alpha-2\n    // @see http://en.wikipedia.org/wiki/ISO_3166\n    // @see http://www.iso.org/iso/country_codes.htm\n    //\n    // @note\n    //   subcode can be in upper case or lower case\n    //   defining it in upper case is a convention only\n\n\n    // Locale code format 2:\n    // Format: `code = primary-code ( \"-\" region-code )*`\n    // primary-code uses ISO 639-1\n    // script-code uses ISO 15924\n    // region-code uses ISO 3166-1 alpha-2\n    // Example: zh-Hant-TW, en-HK, zh-Hant-CN\n    //\n    // It is similar to RFC4646 (or actually the same),\n    // but seems to be limited to language, script, region\n\n    // Compute each locale with its country code.\n    // So this will return an array containing\n    // `de-DE` and `de`\n    // or\n    // `zh-hans-tw`, `zh-hans`, `zh`\n    // locales.\n    locales.forEach(function(locale) {\n      var localeParts = locale.split(\"-\");\n      var firstFallback = null;\n      var secondFallback = null;\n      if (localeParts.length === 3) {\n        firstFallback = [\n          localeParts[0],\n          localeParts[1]\n        ].join(\"-\");\n        secondFallback = localeParts[0];\n      }\n      else if (localeParts.length === 2) {\n        firstFallback = localeParts[0];\n      }\n\n      if (list.indexOf(locale) === -1) {\n        list.push(locale);\n      }\n\n      if (! I18n.fallbacks) {\n        return;\n      }\n\n      [\n        firstFallback,\n        secondFallback\n      ].forEach(function(nullableFallbackLocale) {\n        // We don't want null values\n        if (typeof nullableFallbackLocale === \"undefined\") { return; }\n        if (nullableFallbackLocale === null) { return; }\n        // We don't want duplicate values\n        //\n        // Comparing with `locale` first is faster than\n        // checking whether value's presence in the list\n        if (nullableFallbackLocale === locale) { return; }\n        if (list.indexOf(nullableFallbackLocale) !== -1) { return; }\n\n        list.push(nullableFallbackLocale);\n      });\n    });\n\n    // No locales set? English it is.\n    if (!locales.length) {\n      locales.push(\"en\");\n    }\n\n    return list;\n  };\n\n  // Hold pluralization rules.\n  I18n.pluralization = {};\n\n  // Return the pluralizer for a specific locale.\n  // If no specify locale is found, then I18n's default will be used.\n  I18n.pluralization.get = function(locale) {\n    return this[locale] || this[I18n.locale] || this[\"default\"];\n  };\n\n  // The default pluralizer rule.\n  // It detects the `zero`, `one`, and `other` scopes.\n  I18n.pluralization[\"default\"] = function(count) {\n    switch (count) {\n      case 0: return [\"zero\", \"other\"];\n      case 1: return [\"one\"];\n      default: return [\"other\"];\n    }\n  };\n\n  // Return current locale. If no locale has been set, then\n  // the current locale will be the default locale.\n  I18n.currentLocale = function() {\n    return this.locale || this.defaultLocale;\n  };\n\n  // Check if value is different than undefined and null;\n  I18n.isSet = isSet;\n\n  // Find and process the translation using the provided scope and options.\n  // This is used internally by some functions and should not be used as an\n  // public API.\n  I18n.lookup = function(scope, options) {\n    options = options || {}\n\n    var locales = this.locales.get(options.locale).slice()\n      , requestedLocale = locales[0]\n      , locale\n      , scopes\n      , fullScope\n      , translations\n    ;\n\n    fullScope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = fullScope.split(this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n\n        if (translations === undefined || translations === null) {\n          break;\n        }\n      }\n\n      if (translations !== undefined && translations !== null) {\n        return translations;\n      }\n    }\n\n    if (isSet(options.defaultValue)) {\n      return lazyEvaluate(options.defaultValue, scope);\n    }\n  };\n\n  // lookup pluralization rule key into translations\n  I18n.pluralizationLookupWithoutFallback = function(count, locale, translations) {\n    var pluralizer = this.pluralization.get(locale)\n      , pluralizerKeys = pluralizer(count)\n      , pluralizerKey\n      , message;\n\n    if (isObject(translations)) {\n      while (pluralizerKeys.length) {\n        pluralizerKey = pluralizerKeys.shift();\n        if (isSet(translations[pluralizerKey])) {\n          message = translations[pluralizerKey];\n          break;\n        }\n      }\n    }\n\n    return message;\n  };\n\n  // Lookup dedicated to pluralization\n  I18n.pluralizationLookup = function(count, scope, options) {\n    options = options || {}\n    var locales = this.locales.get(options.locale).slice()\n      , requestedLocale = locales[0]\n      , locale\n      , scopes\n      , translations\n      , message\n    ;\n    scope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = scope.split(this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n        if (!isObject(translations)) {\n          break;\n        }\n        if (scopes.length == 0) {\n          message = this.pluralizationLookupWithoutFallback(count, locale, translations);\n        }\n      }\n      if (message != null && message != undefined) {\n        break;\n      }\n    }\n\n    if (message == null || message == undefined) {\n      if (isSet(options.defaultValue)) {\n        if (isObject(options.defaultValue)) {\n          message = this.pluralizationLookupWithoutFallback(count, options.locale, options.defaultValue);\n        } else {\n          message = options.defaultValue;\n        }\n        translations = options.defaultValue;\n      }\n    }\n\n    return { message: message, translations: translations };\n  };\n\n  // Rails changed the way the meridian is stored.\n  // It started with `date.meridian` returning an array,\n  // then it switched to `time.am` and `time.pm`.\n  // This function abstracts this difference and returns\n  // the correct meridian or the default value when none is provided.\n  I18n.meridian = function() {\n    var time = this.lookup(\"time\");\n    var date = this.lookup(\"date\");\n\n    if (time && time.am && time.pm) {\n      return [time.am, time.pm];\n    } else if (date && date.meridian) {\n      return date.meridian;\n    } else {\n      return DATE.meridian;\n    }\n  };\n\n  // Merge serveral hash options, checking if value is set before\n  // overwriting any value. The precedence is from left to right.\n  //\n  //     I18n.prepareOptions({name: \"John Doe\"}, {name: \"Mary Doe\", role: \"user\"});\n  //     #=> {name: \"John Doe\", role: \"user\"}\n  //\n  I18n.prepareOptions = function() {\n    var args = slice.call(arguments)\n      , options = {}\n      , subject\n    ;\n\n    while (args.length) {\n      subject = args.shift();\n\n      if (typeof(subject) != \"object\") {\n        continue;\n      }\n\n      for (var attr in subject) {\n        if (!subject.hasOwnProperty(attr)) {\n          continue;\n        }\n\n        if (isSet(options[attr])) {\n          continue;\n        }\n\n        options[attr] = subject[attr];\n      }\n    }\n\n    return options;\n  };\n\n  // Generate a list of translation options for default fallbacks.\n  // `defaultValue` is also deleted from options as it is returned as part of\n  // the translationOptions array.\n  I18n.createTranslationOptions = function(scope, options) {\n    var translationOptions = [{scope: scope}];\n\n    // Defaults should be an array of hashes containing either\n    // fallback scopes or messages\n    if (isSet(options.defaults)) {\n      translationOptions = translationOptions.concat(options.defaults);\n    }\n\n    // Maintain support for defaultValue. Since it is always a message\n    // insert it in to the translation options as such.\n    if (isSet(options.defaultValue)) {\n      translationOptions.push({ message: options.defaultValue });\n    }\n\n    return translationOptions;\n  };\n\n  // Translate the given scope with the provided options.\n  I18n.translate = function(scope, options) {\n    options = options || {}\n\n    var translationOptions = this.createTranslationOptions(scope, options);\n\n    var translation;\n\n    var optionsWithoutDefault = this.prepareOptions(options)\n    delete optionsWithoutDefault.defaultValue\n\n    // Iterate through the translation options until a translation\n    // or message is found.\n    var translationFound =\n      translationOptions.some(function(translationOption) {\n        if (isSet(translationOption.scope)) {\n          translation = this.lookup(translationOption.scope, optionsWithoutDefault);\n        } else if (isSet(translationOption.message)) {\n          translation = lazyEvaluate(translationOption.message, scope);\n        }\n\n        if (translation !== undefined && translation !== null) {\n          return true;\n        }\n      }, this);\n\n    if (!translationFound) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof(translation) === \"string\") {\n      translation = this.interpolate(translation, options);\n    } else if (isArray(translation)) {\n      translation = translation.map(function(t) {\n        return this.interpolate(t, options);\n      }, this);\n    } else if (isObject(translation) && isSet(options.count)) {\n      translation = this.pluralize(options.count, scope, options);\n    }\n\n    return translation;\n  };\n\n  // This function interpolates the all variables in the given message.\n  I18n.interpolate = function(message, options) {\n    options = options || {}\n    var matches = message.match(this.placeholder)\n      , placeholder\n      , value\n      , name\n      , regex\n    ;\n\n    if (!matches) {\n      return message;\n    }\n\n    var value;\n\n    while (matches.length) {\n      placeholder = matches.shift();\n      name = placeholder.replace(this.placeholder, \"$1\");\n\n      if (isSet(options[name])) {\n        value = options[name].toString().replace(/\\$/gm, \"_#$#_\");\n      } else if (name in options) {\n        value = this.nullPlaceholder(placeholder, message, options);\n      } else {\n        value = this.missingPlaceholder(placeholder, message, options);\n      }\n\n      regex = new RegExp(placeholder.replace(/\\{/gm, \"\\\\{\").replace(/\\}/gm, \"\\\\}\"));\n      message = message.replace(regex, value);\n    }\n\n    return message.replace(/_#\\$#_/g, \"$\");\n  };\n\n  // Pluralize the given scope using the `count` value.\n  // The pluralized translation may have other placeholders,\n  // which will be retrieved from `options`.\n  I18n.pluralize = function(count, scope, options) {\n    options = this.prepareOptions({count: String(count)}, options)\n    var pluralizer, message, result;\n\n    result = this.pluralizationLookup(count, scope, options);\n    if (result.translations == undefined || result.translations == null) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (result.message != undefined && result.message != null) {\n      return this.interpolate(result.message, options);\n    }\n    else {\n      pluralizer = this.pluralization.get(options.locale);\n      return this.missingTranslation(scope + '.' + pluralizer(count)[0], options);\n    }\n  };\n\n  // Return a missing translation message for the given parameters.\n  I18n.missingTranslation = function(scope, options) {\n    //guess intended string\n    if(this.missingBehaviour == 'guess'){\n      //get only the last portion of the scope\n      var s = scope.split('.').slice(-1)[0];\n      //replace underscore with space && camelcase with space and lowercase letter\n      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') +\n          s.replace('_',' ').replace(/([a-z])([A-Z])/g,\n          function(match, p1, p2) {return p1 + ' ' + p2.toLowerCase()} );\n    }\n\n    var localeForTranslation = (options != null && options.locale != null) ? options.locale : this.currentLocale();\n    var fullScope           = this.getFullScope(scope, options);\n    var fullScopeWithLocale = [localeForTranslation, fullScope].join(this.defaultSeparator);\n\n    return '[missing \"' + fullScopeWithLocale + '\" translation]';\n  };\n\n  // Return a missing placeholder message for given parameters\n  I18n.missingPlaceholder = function(placeholder, message, options) {\n    return \"[missing \" + placeholder + \" value]\";\n  };\n\n  I18n.nullPlaceholder = function() {\n    return I18n.missingPlaceholder.apply(I18n, arguments);\n  };\n\n  // Format number using localization rules.\n  // The options will be retrieved from the `number.format` scope.\n  // If this isn't present, then the following options will be used:\n  //\n  // - `precision`: `3`\n  // - `separator`: `\".\"`\n  // - `delimiter`: `\",\"`\n  // - `strip_insignificant_zeros`: `false`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toNumber = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.format\")\n      , NUMBER_FORMAT\n    );\n\n    var negative = number < 0\n      , string = toFixed(Math.abs(number), options.precision).toString()\n      , parts = string.split(\".\")\n      , precision\n      , buffer = []\n      , formattedNumber\n      , format = options.format || \"%n\"\n      , sign = negative ? \"-\" : \"\"\n    ;\n\n    number = parts[0];\n    precision = parts[1];\n\n    while (number.length > 0) {\n      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));\n      number = number.substr(0, number.length -3);\n    }\n\n    formattedNumber = buffer.join(options.delimiter);\n\n    if (options.strip_insignificant_zeros && precision) {\n      precision = precision.replace(/0+$/, \"\");\n    }\n\n    if (options.precision > 0 && precision) {\n      formattedNumber += options.separator + precision;\n    }\n\n    if (options.sign_first) {\n      format = \"%s\" + format;\n    }\n    else {\n      format = format.replace(\"%n\", \"%s%n\");\n    }\n\n    formattedNumber = format\n      .replace(\"%u\", options.unit)\n      .replace(\"%n\", formattedNumber)\n      .replace(\"%s\", sign)\n    ;\n\n    return formattedNumber;\n  };\n\n  // Format currency with localization rules.\n  // The options will be retrieved from the `number.currency.format` and\n  // `number.format` scopes, in that order.\n  //\n  // Any missing option will be retrieved from the `I18n.toNumber` defaults and\n  // the following options:\n  //\n  // - `unit`: `\"$\"`\n  // - `precision`: `2`\n  // - `format`: `\"%u%n\"`\n  // - `delimiter`: `\",\"`\n  // - `separator`: `\".\"`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toCurrency = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.currency.format\")\n      , this.lookup(\"number.format\")\n      , CURRENCY_FORMAT\n    );\n\n    return this.toNumber(number, options);\n  };\n\n  // Localize several values.\n  // You can provide the following scopes: `currency`, `number`, or `percentage`.\n  // If you provide a scope that matches the `/^(date|time)/` regular expression\n  // then the `value` will be converted by using the `I18n.toTime` function.\n  //\n  // It will default to the value's `toString` function.\n  //\n  I18n.localize = function(scope, value, options) {\n    options || (options = {});\n\n    switch (scope) {\n      case \"currency\":\n        return this.toCurrency(value);\n      case \"number\":\n        scope = this.lookup(\"number.format\");\n        return this.toNumber(value, scope);\n      case \"percentage\":\n        return this.toPercentage(value);\n      default:\n        var localizedValue;\n\n        if (scope.match(/^(date|time)/)) {\n          localizedValue = this.toTime(scope, value);\n        } else {\n          localizedValue = value.toString();\n        }\n\n        return this.interpolate(localizedValue, options);\n    }\n  };\n\n  // Parse a given `date` string into a JavaScript Date object.\n  // This function is time zone aware.\n  //\n  // The following string formats are recognized:\n  //\n  //    yyyy-mm-dd\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ssZ\n  //    yyyy-mm-dd[ T]hh:mm::ss+0000\n  //    yyyy-mm-dd[ T]hh:mm::ss+00:00\n  //    yyyy-mm-dd[ T]hh:mm::ss.123Z\n  //\n  I18n.parseDate = function(date) {\n    var matches, convertedDate, fraction;\n    // we have a date, so just return it.\n    if (typeof(date) == \"object\") {\n      return date;\n    };\n\n    matches = date.toString().match(/(\\d{4})-(\\d{2})-(\\d{2})(?:[ T](\\d{2}):(\\d{2}):(\\d{2})([\\.,]\\d{1,3})?)?(Z|\\+00:?00)?/);\n\n    if (matches) {\n      for (var i = 1; i <= 6; i++) {\n        matches[i] = parseInt(matches[i], 10) || 0;\n      }\n\n      // month starts on 0\n      matches[2] -= 1;\n\n      fraction = matches[7] ? 1000 * (\"0\" + matches[7]) : null;\n\n      if (matches[8]) {\n        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));\n      } else {\n        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);\n      }\n    } else if (typeof(date) == \"number\") {\n      // UNIX timestamp\n      convertedDate = new Date();\n      convertedDate.setTime(date);\n    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\\d+) (\\d+:\\d+:\\d+) ([+-]\\d+) (\\d+)/)) {\n      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by\n      // webkit/firefox, but not by IE, so we must parse it manually.\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse([\n        RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5\n      ].join(\" \")));\n    } else if (date.match(/\\d+ \\d+:\\d+:\\d+ [+-]\\d+ \\d+/)) {\n      // a valid javascript format with timezone info\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    } else {\n      // an arbitrary javascript string\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    }\n\n    return convertedDate;\n  };\n\n  // Formats time according to the directives in the given format string.\n  // The directives begins with a percent (%) character. Any text not listed as a\n  // directive will be passed through to the output string.\n  //\n  // The accepted formats are:\n  //\n  //     %a  - The abbreviated weekday name (Sun)\n  //     %A  - The full weekday name (Sunday)\n  //     %b  - The abbreviated month name (Jan)\n  //     %B  - The full month name (January)\n  //     %c  - The preferred local date and time representation\n  //     %d  - Day of the month (01..31)\n  //     %-d - Day of the month (1..31)\n  //     %H  - Hour of the day, 24-hour clock (00..23)\n  //     %-H - Hour of the day, 24-hour clock (0..23)\n  //     %I  - Hour of the day, 12-hour clock (01..12)\n  //     %-I - Hour of the day, 12-hour clock (1..12)\n  //     %m  - Month of the year (01..12)\n  //     %-m - Month of the year (1..12)\n  //     %M  - Minute of the hour (00..59)\n  //     %-M - Minute of the hour (0..59)\n  //     %p  - Meridian indicator (AM  or  PM)\n  //     %S  - Second of the minute (00..60)\n  //     %-S - Second of the minute (0..60)\n  //     %w  - Day of the week (Sunday is 0, 0..6)\n  //     %y  - Year without a century (00..99)\n  //     %-y - Year without a century (0..99)\n  //     %Y  - Year with century\n  //     %z  - Timezone offset (+0545)\n  //\n  I18n.strftime = function(date, format) {\n    var options = this.lookup(\"date\")\n      , meridianOptions = I18n.meridian()\n    ;\n\n    if (!options) {\n      options = {};\n    }\n\n    options = this.prepareOptions(options, DATE);\n\n    if (isNaN(date.getTime())) {\n      throw new Error('I18n.strftime() requires a valid date object, but received an invalid date.');\n    }\n\n    var weekDay = date.getDay()\n      , day = date.getDate()\n      , year = date.getFullYear()\n      , month = date.getMonth() + 1\n      , hour = date.getHours()\n      , hour12 = hour\n      , meridian = hour > 11 ? 1 : 0\n      , secs = date.getSeconds()\n      , mins = date.getMinutes()\n      , offset = date.getTimezoneOffset()\n      , absOffsetHours = Math.floor(Math.abs(offset / 60))\n      , absOffsetMinutes = Math.abs(offset) - (absOffsetHours * 60)\n      , timezoneoffset = (offset > 0 ? \"-\" : \"+\") +\n          (absOffsetHours.toString().length < 2 ? \"0\" + absOffsetHours : absOffsetHours) +\n          (absOffsetMinutes.toString().length < 2 ? \"0\" + absOffsetMinutes : absOffsetMinutes)\n    ;\n\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    } else if (hour12 === 0) {\n      hour12 = 12;\n    }\n\n    format = format.replace(\"%a\", options.abbr_day_names[weekDay]);\n    format = format.replace(\"%A\", options.day_names[weekDay]);\n    format = format.replace(\"%b\", options.abbr_month_names[month]);\n    format = format.replace(\"%B\", options.month_names[month]);\n    format = format.replace(\"%d\", padding(day));\n    format = format.replace(\"%e\", day);\n    format = format.replace(\"%-d\", day);\n    format = format.replace(\"%H\", padding(hour));\n    format = format.replace(\"%-H\", hour);\n    format = format.replace(\"%I\", padding(hour12));\n    format = format.replace(\"%-I\", hour12);\n    format = format.replace(\"%m\", padding(month));\n    format = format.replace(\"%-m\", month);\n    format = format.replace(\"%M\", padding(mins));\n    format = format.replace(\"%-M\", mins);\n    format = format.replace(\"%p\", meridianOptions[meridian]);\n    format = format.replace(\"%S\", padding(secs));\n    format = format.replace(\"%-S\", secs);\n    format = format.replace(\"%w\", weekDay);\n    format = format.replace(\"%y\", padding(year));\n    format = format.replace(\"%-y\", padding(year).replace(/^0+/, \"\"));\n    format = format.replace(\"%Y\", year);\n    format = format.replace(\"%z\", timezoneoffset);\n\n    return format;\n  };\n\n  // Convert the given dateString into a formatted date.\n  I18n.toTime = function(scope, dateString) {\n    var date = this.parseDate(dateString)\n      , format = this.lookup(scope)\n    ;\n\n    if (date.toString().match(/invalid/i)) {\n      return date.toString();\n    }\n\n    if (!format) {\n      return date.toString();\n    }\n\n    return this.strftime(date, format);\n  };\n\n  // Convert a number into a formatted percentage value.\n  I18n.toPercentage = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.percentage.format\")\n      , this.lookup(\"number.format\")\n      , PERCENTAGE_FORMAT\n    );\n\n    return this.toNumber(number, options);\n  };\n\n  // Convert a number into a readable size representation.\n  I18n.toHumanSize = function(number, options) {\n    var kb = 1024\n      , size = number\n      , iterations = 0\n      , unit\n      , precision\n    ;\n\n    while (size >= kb && iterations < 4) {\n      size = size / kb;\n      iterations += 1;\n    }\n\n    if (iterations === 0) {\n      unit = this.t(\"number.human.storage_units.units.byte\", {count: size});\n      precision = 0;\n    } else {\n      unit = this.t(\"number.human.storage_units.units.\" + SIZE_UNITS[iterations]);\n      precision = (size - Math.floor(size) === 0) ? 0 : 1;\n    }\n\n    options = this.prepareOptions(\n        options\n      , {unit: unit, precision: precision, format: \"%n%u\", delimiter: \"\"}\n    );\n\n    return this.toNumber(size, options);\n  };\n\n  I18n.getFullScope = function(scope, options) {\n    options = options || {}\n\n    // Deal with the scope as an array.\n    if (isArray(scope)) {\n      scope = scope.join(this.defaultSeparator);\n    }\n\n    // Deal with the scope option provided through the second argument.\n    //\n    //    I18n.t('hello', {scope: 'greetings'});\n    //\n    if (options.scope) {\n      scope = [options.scope, scope].join(this.defaultSeparator);\n    }\n\n    return scope;\n  };\n  /**\n   * Merge obj1 with obj2 (shallow merge), without modifying inputs\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @returns {Object} Merged values of obj1 and obj2\n   *\n   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used\n   * Idea is from:\n   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8\n   */\n  I18n.extend = function ( obj1, obj2 ) {\n    if (typeof(obj1) === \"undefined\" && typeof(obj2) === \"undefined\") {\n      return {};\n    }\n    return merge(obj1, obj2);\n  };\n\n  // Set aliases, so we can save some typing.\n  I18n.t = I18n.translate;\n  I18n.l = I18n.localize;\n  I18n.p = I18n.pluralize;\n\n  return I18n;\n}));\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n"],"sourceRoot":""}